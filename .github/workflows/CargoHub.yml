name: CargoHub application

on:
  push:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Setup .NET SDK
      uses: actions/setup-dotnet@v3
      with:
          dotnet-version: '8.0.x'

    - name: Restore dependencies
      run: |
        dotnet restore
      working-directory: CargoHubV2

    - name: Build CargoHubV2
      run: dotnet build --no-restore
      working-directory: CargoHubV2

  test: 
    runs-on: ubuntu-latest
    needs: build

    steps:
      - uses: actions/checkout@v3
      - name: Restore dependencies
        run: |
          dotnet restore
        working-directory: CargoHubV2

      - name: Run Unit Tests
        run: dotnet test
        working-directory: UnitTests

# name: Python application1

# on:
#   push:

# jobs:
#   build:
#     runs-on: ubuntu-latest
#     steps:
#     - uses: actions/checkout@v4
#     - name: Set up Python 3.12
#       uses: actions/setup-python@v5
#       with:
#         python-version: "3.12"
#         cache: 'pip'
#     - name: Install dependencies
#       run: |
#         python -m pip install --upgrade pip
#         pip install flake8
#         if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
#   test: 
#     needs: build
#     runs-on: ubuntu-latest
#     steps:
#     - uses: actions/checkout@v4
#     - name: Set up Python 3.12
#       uses: actions/setup-python@v5
#       with:
#         python-version: "3.12"
#         cache: 'pip'
#     - name: Install dependencies
#       run: |
#         python -m pip install --upgrade pip
#         pip install flake8 pytest
#         if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
#     - name: Start web server
#       run: |
#         nohup python ./api/main.py &
#         sleep 10
#         curl http://localhost:3000/api/v1/
#     - name: Test with pytest (integration)
#       run: |
#         pytest ./api/testing/    